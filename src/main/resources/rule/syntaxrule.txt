
sqls -> sql ";" sqls
    | sql ";"
    | sql

sql -> "USE" use "SEARCH" search "WHERE" where
    | "USE" use "SEARCH" search
    | "SEARCH" search "WHERE" where
    | "USE" use
    | "SEARCH" search
    | "WHERE" where


search -> strings :> org.riseger.protoctl.compiler.function.main.Search_f

where -> conditions :> org.riseger.protoctl.compiler.function.main.Where_f

use -> statements

statements -> statement "|" statements
    |  statement

statement -> "DATABASE" string :> org.riseger.protoctl.compiler.function.main.UseDatabase_f
    | "MAP" string :> org.riseger.protoctl.compiler.function.main.UseMap_f
    | "SCOPE" rectangle :> org.riseger.protoctl.compiler.function.main.UseScope_f
    | "MODEL" strings :> org.riseger.protoctl.compiler.function.main.UseModel_f

strings -> string "," strings :> org.riseger.protoctl.compiler.function.entity.Strings_f
    | string :> org.riseger.protoctl.compiler.function.entity.Strings_f
    | attribute

rectangle -> "RECT" "(" coord "," number_operator ")" :> org.riseger.protoctl.compiler.function.entity.Rectangle_f
    | attribute

coord -> "COORD" "(" number_operator "," number_operator ")" :> org.riseger.protoctl.compiler.function.entity.Coord_f
    | attribute

conditions -> bool_condition

bool_condition -> "(" conditions ")"
    | bool_condition bool_condition "OR" bool_condition :> org.riseger.protoctl.compiler.function.logic.Or_f
    | "AND" bool_condition :> org.riseger.protoctl.compiler.function.logic.And_f
    | "!" bool_condition :> org.riseger.protoctl.compiler.function.logic.Not_f
    | number_operator ">" number_operator :> org.riseger.protoctl.compiler.function.math.Big_f
    | number_operator ">=" number_operator :> org.riseger.protoctl.compiler.function.math.BigEqual_f
    | number_operator "<" number_operator :> org.riseger.protoctl.compiler.function.math.Small_f
    | number_operator "<=" number_operator :> org.riseger.protoctl.compiler.function.math.SmallEqual_f
    //TODO：需要判断迭元语（number_operator，string）是否合法，这样会导致时间复杂度极大，需要做缓存存储部分迭代
    | number_operator "=" number_operator :> org.riseger.protoctl.compiler.function.math.Equal_f
    | attribute "=" attribute :> org.riseger.protoctl.compiler.function.math.Equal_f
    | attribute "=" string :> org.riseger.protoctl.compiler.function.math.Equal_f
    | "IN" rectangle :> org.riseger.protoctl.compiler.function.graphic.In_f
    | "OUT" rectangle :> org.riseger.protoctl.compiler.function.graphic.Out_f

attribute -> string "." string :> org.riseger.protoctl.compiler.function.entity.Attribute_f



number_operator -> "(" number_operator ")"
    | "-" number_operator :> org.riseger.protoctl.compiler.number.NegivateNumber_f
    | operator_0

operator_0 -> number "+" number :> org.riseger.protoctl.compiler.number.AddNumber_f
    | number "-" number :> org.riseger.protoctl.compiler.number.SubNumber_f
    | operator_1

operator_1 -> number "*" number :> org.riseger.protoctl.compiler.number.MutiNumber_f
    | number "/" number :> org.riseger.protoctl.compiler.number.DivideNumber_f
    | number

END:string :> org.riseger.protoctl.compiler.function.Entity_f
END:number :> org.riseger.protoctl.compiler.function.Entity_f
